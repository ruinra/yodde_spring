<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="www.yodde.co.kr/store">
   <insert id="insertStore" parameterType="com.yodde.storeModel.StoreDto">
      insert into store(storeId, storeName, address, streetAddr, openDate, serviceTime, mapId, latitude, longitude, status, homepage, rate, category1, category2, category3, phoneNum) values(
         seq_store.nextval,
         #{storeName},
         #{address},
         #{streetAddr},
         #{openDate, jdbcType=DATE},
         #{serviceTime, jdbcType=VARCHAR},
         #{mapId, jdbcType=VARCHAR},
         #{latitude, jdbcType=DOUBLE},
         #{longitude, jdbcType=DOUBLE},
         #{status, jdbcType=VARCHAR},         
         #{homepage, jdbcType=VARCHAR},
         #{rate, jdbcType=NUMERIC},
         #{category1},
         #{category2},
         #{category3},
         #{phoneNum, jdbcType=VARCHAR}
      )
   </insert>
   
   <select id="isExistStore" parameterType="com.yodde.storeModel.StoreDto" resultType="String">
      select storeId from store where address = #{address} and storeName = #{storeName}
   </select>
   
   <select id="selectStoreByStoreId" parameterType="int" resultType="com.yodde.storeModel.StoreDto">
      select * from store where storeId = #{storeId}
   </select>
   
   <insert id="storeInfo" parameterType="int">
      insert into store_info values(#{storeId}, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
   </insert>
   
   <update id="storeUpdateFile" parameterType="com.yodde.storeModel.StoreDto">
      update store set openDate=#{openDate}, serviceTime=#{serviceTime}, status=#{status}, homePage=#{homepage}, profilePic=#{profilePic} where storeId=#{storeId}
   </update>
   
   <select id="selectStoreByStoreInfo" parameterType="java.util.HashMap" resultType="com.yodde.storeModel.StoreAndStoreInfoDto">	
		SELECT s.*, i.*, ${storeInfo} as total FROM STORE s, STORE_INFO i WHERE S.STOREID = I.STOREID AND s.storeName like #{query} ORDER BY total desc
   </select>
   
   
   <select id="storeInfoSelect" parameterType="int" resultType="com.yodde.storeModel.StoreInfoDto">
      select * from store_info where storeId=#{storeId}
   </select>
   
   <update id="storeInfoUpdate" parameterType="com.yodde.storeModel.StoreInfoDto">
      update store_info set 
         RESERVATION=#{reservation}, 
         DELIVERY=#{delivery}, 
         TAKEOUT=#{takeOut}, 
         CREDITCARD=#{creditCard}, 
         PARKING=#{parking}, 
         GROUP1=#{group1}, 
         TOILET=#{toilet}, 
         WIFI=#{wifi}, 
         TV=#{tv}, 
         SEATING=#{seating}, 
         KIDS=#{kids}, 
         DRIVETHROUGH=#{driveThrough}
         where storeId=#{storeId}   
   </update>
   
   <update id="storeUpdate" parameterType="com.yodde.storeModel.StoreDto">
      update store set openDate=#{openDate}, serviceTime=#{serviceTime}, status=#{status}, homePage=#{homepage} where storeId=#{storeId}
   </update>
   
   <select id="selectRecentReviewName" parameterType="String" resultType="com.yodde.storeModel.StoreDto">
       SELECT s.storeName, s.storeId, s.latitude, s.longitude FROM REVIEW rv, STORE s WHERE RV.WRITER=#{email} AND RV.STOREID=S.STOREID ORDER BY RV.WRITEDATE DESC
    </select>
   
	<select id="selectStoreByCategory" parameterType="java.util.HashMap" resultType="com.yodde.storeModel.StoreDto">
      select * from store where category1 like #{query} or category2 like #{query}
   </select>
   
   <select id="newOpen" resultType="com.yodde.storeModel.StoreDto">
       <![CDATA[
         SELECT * FROM (SELECT * FROM store ORDER BY opendate DESC) WHERE ROWNUM <= 6     
      ]]>
    </select>
    
    <select id="hotPlace" resultType="com.yodde.storeModel.StoreDto">
       <![CDATA[
          select * from (select * from store order by rate desc) where rownum <= 6
       ]]>
    </select>
    
    <select id="upLike" resultType="com.yodde.storeModel.LikeDto">
         <![CDATA[
            select * from (SELECT R.STOREID, R.LIKE1, M.NICKNAME, M.PROFILEPIC, S.STORENAME FROM REVIEW r, MEMBER m, STORE s
         where R.WRITER=M.EMAIL AND R.STOREID=S.STOREID ORDER BY R.LIKE1 desc) where rownum <= 6
         ]]> 
    </select>
    
    <select id="followReview" parameterType="String" resultType="com.yodde.storeModel.FollowReview">
       <![CDATA[
          SELECT * from
         (select b.*, s.storename from STORE s,
         ((SELECT a.*, m.nickname, m.profilePic from MEMBER m, ((SELECT storeid, writer, writedate
         FROM REVIEW
         where writer IN (SELECT follower FROM FOLLOW_MEMBER WHERE followee=#{email})) a)
         WHERE m.email=a.writer) b) WHERE s.storeId=b.storeId ORDER BY writedate DESC) WHERE rownum <=6
       ]]>
    </select>
    
    <select id="followStoreReview" parameterType="String" resultType="com.yodde.storeModel.FollowStore">
      <![CDATA[
         select * from
         (SELECT b.*, m.nickname, m.profilePic FROM MEMBER m,
         ((SELECT a.*, r.writedate, r.writer FROM REVIEW r, ((SELECT storeId, storename FROM STORE WHERE storeId in (SELECT storeId FROM FOLLOW_STORE WHERE storefollowee=#{email})) a)
         WHERE r.storeId=a.storeId) b) WHERE b.writer=m.email ORDER BY writedate desc) WHERE rownum <=6
      ]]>    
    </select>
    
    <select id="selectStoreByAddress" parameterType="String" resultType="com.yodde.storeModel.StoreDto">
   		SELECT * FROM store WHERE address LIKE #{query}
   </select>
   
</mapper>